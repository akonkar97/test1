---
name: Build & Test

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-20.04
    steps:
      - name: Setup ROS
        uses: ros-tooling/setup-ros@v0.4
      - run: vcs --help

    defaults:
      run:
        shell: bash
        
  build_docker:
    runs-on: ubuntu-20.04
    container:
      image: ubuntu:focal
    steps:
      - uses: ros-tooling/setup-ros@v0.4
        with:
            use-ros2-testing: true
            required-ros-distributions: humble
      - run: vcs --help
          
#       - name: Create workspace
#         run: |
#           cd src
#           wstool init
#           cd ..
#           rosdep update
#           rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO
          
#       - name: Build workspace
#         if: contains(matrix.container.image, 'melodic') || contains(matrix.container.image, 'noetic')
#         run: |
#           . /opt/ros/$ROS_DISTRO/setup.bash
#           catkin build
#       - name: Unit tests
#         run: |
#           sudo apt install -y lcov
#           . /opt/ros/$ROS_DISTRO/setup.bash
#           catkin config --cmake-args -DCMAKE_CXX_FLAGS="-Wall -Wno-unused --coverage -fno-inline -fno-inline-small-functions -fno-default-inline" -DCMAKE_C_FLAGS="-Wall -Wno-unused --coverage -fno-inline -fno-inline-small-functions -fno-default-inline" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXE_LINKER_FLAGS="-lgcov"
#           catkin build
#           catkin run_tests -i && catkin_test_results
#       - name: Configure Codecov
#         run: |
#           lcov --directory . --capture --output-file coverage.info
#           lcov --remove coverage.info '/opt/*' '/usr/*' '*/devel/*' '*_test*' --output-file coverage.info
#           lcov --list coverage.info
      
#       - name: Coveralls
#         uses: coverallsapp/github-action@master
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           path-to-lcov: ${{ github.workspace }}/coverage.info

