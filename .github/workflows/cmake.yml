---
name: Build & Test

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        container:
          - image: 'ros:galactic'
            env:
              PYTHON_VERSION:
              ROS_DISTRO: galactic

    container: ${{ matrix.container }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/${{ github.workspace }}

      - name: Remove broken apt repos [Ubuntu]
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
      - name: Install ROS package dependencies
        run: |
          sudo apt update && sudo apt -y install locales
          sudo locale-gen en_US en_US.UTF-8
          sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
          export LANG=en_US.UTF-8
          sudo apt install -y software-properties-common
          sudo add-apt-repository universe
          sudo apt update && sudo apt install -y curl
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          sudo apt install -y git
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt update
          sudo apt upgrade
          sudo apt install -y ros-galactic-ros-base
          sudo apt install -y ros-dev-tools
          
          #sudo apt install -y python$PYTHON_VERSION-osrf-pycommon
          #sudo apt install -y python$PYTHON_VERSION-catkin-tools
          #python$PYTHON_VERSION -m pip install --upgrade pip
          #python3 -m pip install --upgrade pip
          
#       - name: Create workspace
#         run: |
#           cd src
#           wstool init
#           cd ..
#           rosdep update
#           rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO
          
#       - name: Build workspace
#         if: contains(matrix.container.image, 'melodic') || contains(matrix.container.image, 'noetic')
#         run: |
#           . /opt/ros/$ROS_DISTRO/setup.bash
#           catkin build
#       - name: Unit tests
#         run: |
#           sudo apt install -y lcov
#           . /opt/ros/$ROS_DISTRO/setup.bash
#           catkin config --cmake-args -DCMAKE_CXX_FLAGS="-Wall -Wno-unused --coverage -fno-inline -fno-inline-small-functions -fno-default-inline" -DCMAKE_C_FLAGS="-Wall -Wno-unused --coverage -fno-inline -fno-inline-small-functions -fno-default-inline" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXE_LINKER_FLAGS="-lgcov"
#           catkin build
#           catkin run_tests -i && catkin_test_results
#       - name: Configure Codecov
#         run: |
#           lcov --directory . --capture --output-file coverage.info
#           lcov --remove coverage.info '/opt/*' '/usr/*' '*/devel/*' '*_test*' --output-file coverage.info
#           lcov --list coverage.info
      
#       - name: Coveralls
#         uses: coverallsapp/github-action@master
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           path-to-lcov: ${{ github.workspace }}/coverage.info

